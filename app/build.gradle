apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.amatecny.interestingflights"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
}

ext {
    // reusable variables that can be referenced to keep various versions of libs consistent
    supportLibVersion = '26.0.+'
    daggerVersion = '2.11'
    mockitoVersion = '2.8.9'
    //be wary of version 3.x which is not fully compatible with dex
    assertCoreVersion = '2.6.0'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //ui
    compile "com.android.support:appcompat-v7:$supportLibVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    //ui binding
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //images
    compile 'com.squareup.picasso:picasso:2.5.2'

    //networking
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    // networking (json->POJO)
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    // Let's make the retrofit compatible with RxJava (Call<?> -> Observable<?>) for Retrofit interfaces.
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //event handling Rx
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.2'

    // dependency injection
    compile "com.google.dagger:dagger-android:$daggerVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    compile "com.google.dagger:dagger-android-support:$daggerVersion" // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestAnnotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // AutoValue POJO class generation
    provided "com.google.auto.value:auto-value:1.3"
    annotationProcessor "com.google.auto.value:auto-value:1.3"

    // gson extension for auto-value
    annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.4.5'
    provided 'com.ryanharter.auto.value:auto-value-gson:0.4.5'
    //parcelable extension for autovalue
    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'

    //Logging
    compile 'com.jakewharton.timber:timber:4.5.0'

    // interceptions for logging
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    //tests
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.assertj:assertj-core:${assertCoreVersion}"

    androidTestCompile "org.mockito:mockito-android:${mockitoVersion}"
    androidTestCompile "org.assertj:assertj-core:${assertCoreVersion}"

    androidTestCompile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    androidTestCompile 'io.reactivex.rxjava2:rxjava:2.1.2'

    //instrumented test dependencies
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations';
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
}
